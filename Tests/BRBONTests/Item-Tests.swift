//
//  Item-Tests.swift
//  BRBONTests
//
//  Created by Rien van der lugt on 18/05/2018.
//

import XCTest
import BRUtils
@testable import BRBON


class Item_Tests: XCTestCase {

    override func setUp() {
        super.setUp()
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }
    
    override func tearDown() {
        // Put teardown code here. This method is called after the invocation of each test method in the class.
        super.tearDown()
    }

    func testItemName() {
        
        ItemManager.startWithZeroedBuffers = true
        
        
        // Item without name
        
        var im = ItemManager.createManager(withValue: Int64(0x1234567887654321))
        
        XCTAssertNil(im.root.itemName)
        
        
        // Item with name
        
        im = ItemManager.createManager(withValue: Int64(0x1234567887654321), withNameField: NameField("Name"))

        XCTAssertEqual(im.root.itemName, "Name")
        
        var exp = Data([
            0x06, 0x00, 0x00, 0x08,  0x20, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00,
            0xaa, 0x4d, 0x04, 0x4e,  0x61, 0x6d, 0x65, 0x00,
            0x21, 0x43, 0x65, 0x87,  0x78, 0x56, 0x34, 0x12
            ])

        XCTAssertEqual(im.data, exp)
        
        
        // Remove name
        
        XCTAssertEqual(im.root.updateItemName(to: nil), .success)
        
        exp = Data([
            0x06, 0x00, 0x00, 0x00,  0x20, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00,
            0x21, 0x43, 0x65, 0x87,  0x78, 0x56, 0x34, 0x12,
            0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00
            ])

        XCTAssertEqual(im.data, exp)
        
        
        // Add name
        
        XCTAssertEqual(im.root.updateItemName(to: NameField("Name")), .success)

        exp = Data([
            0x06, 0x00, 0x00, 0x08,  0x20, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00,
            0xaa, 0x4d, 0x04, 0x4e,  0x61, 0x6d, 0x65, 0x00,
            0x21, 0x43, 0x65, 0x87,  0x78, 0x56, 0x34, 0x12
            ])

        XCTAssertEqual(im.data, exp)

        
        // Decrease name size
        
        XCTAssertEqual(im.root.updateItemName(to: NameField("one")), .success)
        
        exp = Data([
            0x06, 0x00, 0x00, 0x08,  0x20, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00,
            0xdc, 0x56, 0x03, 0x6f,  0x6e, 0x65, 0x00, 0x00,
            0x21, 0x43, 0x65, 0x87,  0x78, 0x56, 0x34, 0x12
            ])
        
        XCTAssertEqual(im.data, exp)

        
        // Increase name size
        
        XCTAssertEqual(im.root.updateItemName(to: NameField("onetwo")), .success)
        
        exp = Data([
            0x06, 0x00, 0x00, 0x10,  0x28, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00,
            0xd9, 0x9c, 0x06, 0x6f,  0x6e, 0x65, 0x74, 0x77,
            0x6f, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00,
            0x21, 0x43, 0x65, 0x87,  0x78, 0x56, 0x34, 0x12
            ])
        
        XCTAssertEqual(im.data, exp)

    }
}
